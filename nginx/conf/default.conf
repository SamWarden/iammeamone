map $server_port $internal_hostname {
    "443" "hello-world";

    "8443" "hello-world";

    default "localhost";
}

map $server_port $internal_port {
    "443" "8000";

    "8443" "8000";

    default "$server_port";
}

# Redirect to HTTPS
server {
    listen 80;

    return 301 https://$host$request_uri;
}

server {
    # server_name example.com;

    # must specify docker DNS as a resolver when use variables for proxy_pass
    resolver 127.0.0.11 ipv6=off; 

    # list all publically available ports
    listen 443 ssl;   
    listen 8443 ssl;

    ssl_certificate         /etc/nginx/ssl/le-crt.pem;
    ssl_certificate_key     /etc/nginx/ssl/le-key.pem;
    ssl_trusted_certificate /etc/nginx/ssl/le-chain-crt.pem;

    location / {
        proxy_set_header        Host $http_host;
        proxy_set_header        X-Real-IP $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Proto $scheme;

        # use the mapped hostname and port for a proxy target
        proxy_pass              "http://$internal_hostname:$internal_port";
    }
}
